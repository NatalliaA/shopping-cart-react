{"version":3,"sources":["components/Navbar.js","actions.js","components/CartItem.js","components/CartContainer.js","images/crossfit.png","data.js","images/yoga.png","images/meditation.png","images/boat.png","images/trekking.png","reducer.js","App.js","index.js"],"names":["connect","state","amount","className","xmlns","viewBox","d","DECREASE","INCREASE","REMOVE","SHOW_ALL","GET_TOTALS","dispatch","ownProps","id","remove","type","payload","removeItem","increase","decrease","img","title","price","src","alt","onClick","store","cart","total","React","useEffect","length","map","item","data","crossfit","initialStore","reducer","action","newCart","filter","cartItem","reduce","cartTotal","itemTotal","createStore","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.908daaee.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { connect } from 'react-redux';\r\n\r\nconst Navbar = ({amount}) => {\r\n  \r\n  return (\r\n    <nav>\r\n      <div className=\"nav-center\">\r\n        <h3>Health Classes</h3>\r\n        <div className=\"nav-container\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\r\n            <path d=\"M16 6v2h2l2 12H0L2 8h2V6a6 6 0 1 1 12 0zm-2 0a4 4 0 1 0-8 0v2h8V6zM4 10v2h2v-2H4zm10 0v2h2v-2h-2z\" />\r\n          </svg>\r\n          <div className=\"amount-container\">\r\n            <p className=\"total-amount\">{amount}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\n//should return a flat object\r\n//has access to our state\r\nconst mapStateToProps = state =>{\r\nreturn {amount: state.amount};\r\n}\r\n\r\n//connect is a high-order component that returns a component Navbar\r\nexport default connect(mapStateToProps)(Navbar);\r\n","export const DECREASE = \"DECREASE\";\r\nexport const INCREASE = \"INCREASE\";\r\nexport const REMOVE = \"REMOVE\";\r\nexport const SHOW_ALL= \"SHOW_ALL\";\r\nexport const TOGGLE_AMOUNT = \"TOGGLE_AMOUNT\";\r\nexport const GET_TOTALS = \"GET_TOTALS\";\r\n\r\nexport const removeItem = id => {\r\n    return {type: REMOVE, payload: {id}};\r\n};","import React from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { DECREASE, INCREASE, removeItem } from '../actions';\r\n\r\nconst CartItem = ({ img, title, price, amount, remove, increase, decrease }) => {\r\n  return (\r\n    <div className=\"cart-item\">\r\n      <img src={img} alt={title} />\r\n      <div>\r\n        <h4>{title}</h4>\r\n        <h4 className=\"item-price\">${price}</h4>\r\n\r\n        {/* remove button */}\r\n        <button className=\"remove-btn\"\r\n        onClick={()=>remove()}>remove</button>\r\n      </div>\r\n      <div>\r\n\r\n        {/* increase amount */}\r\n        <button className=\"amount-btn\"\r\n        onClick={()=>increase()}\r\n        >\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\r\n            <path d=\"M10.707 7.05L10 6.343 4.343 12l1.414 1.414L10 9.172l4.243 4.242L15.657 12z\" />\r\n          </svg>\r\n        </button>\r\n\r\n        {/* amount */}\r\n        <p className=\"amount\">{amount}</p>\r\n        \r\n        {/* decrease amount */}\r\n        <button className=\"amount-btn\"\r\n        onClick={()=>decrease()}>\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\r\n            <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\r\n          </svg>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n  //ownPros= props from cart item\r\n   //()=> in remove otherwise it executes dispatch right away\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n  const {id, amount} = ownProps; \r\n\r\n  return {\r\n    remove: ()=> dispatch(removeItem(id)),\r\n    increase: ()=> dispatch({type: INCREASE, payload: {id}}),\r\n    decrease: ()=> dispatch({type: DECREASE, payload: {id, amount}})\r\n  };\r\n}\r\n\r\n//null for the first arg mapStateToProps that we dont need\r\nexport default connect(null, mapDispatchToProps)(CartItem);\r\n","import React from \"react\";\r\nimport CartItem from \"./CartItem\";\r\nimport {connect} from 'react-redux';\r\nimport { SHOW_ALL, GET_TOTALS } from '../actions';\r\n\r\nconst CartContainer = ({ cart = [], total, dispatch}) => {\r\n\r\n  React.useEffect(()=>{\r\n    //dependency array to run useEffect ONLY\r\n    // if something changes in the cart\r\n    dispatch({type: GET_TOTALS});\r\n  }, [cart, dispatch]);\r\n\r\n  //cart = [] default parameter if something goes wrong with the cart\r\n\r\n  if (cart.length === 0) {\r\n    return (\r\n      <section className=\"cart\">\r\n        {/* cart header */}\r\n        <header className='empty'>       \r\n          <h2>Your Cart</h2>\r\n          <h4 className=\"empty-cart\">is currently empty</h4>\r\n          <button className=\"btn clear-btn\"\r\n        onClick={()=>dispatch({type: SHOW_ALL})}>All Classes</button>          \r\n        </header>\r\n      </section>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <section className=\"cart\">\r\n      \r\n      <header>\r\n        <h2>your cart</h2>\r\n      </header>\r\n    \r\n      <article>\r\n        {cart.map(item => {\r\n          return <CartItem key={item.id} {...item} />;\r\n        })}\r\n      </article>\r\n    \r\n      <footer>\r\n        <hr />\r\n        <div className=\"cart-total\">\r\n          <h4>\r\n            total <span>${total}</span>\r\n          </h4>\r\n        </div>  \r\n        <button className=\"btn clear-btn\"\r\n        onClick={()=>dispatch({type: SHOW_ALL})}>All Classes</button>      \r\n      </footer>\r\n    </section>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = store => {\r\nreturn {cart: store.cart, total: store.total};\r\n};\r\n\r\nexport default connect(mapStateToProps)(CartContainer);\r\n","export default __webpack_public_path__ + \"static/media/crossfit.6a816912.png\";","\r\nimport crossfit from'./images/crossfit.png';\r\nimport yoga from'./images/yoga.png';\r\nimport meditation from'./images/meditation.png';\r\nimport boat from'./images/boat.png';\r\nimport trekking from'./images/trekking.png';\r\n\r\nconst data = [\r\n    {\r\n      id: 1,\r\n      title: \"Yoga\",\r\n      price: 15,\r\n      img: yoga,        \r\n      amount: 1\r\n    },\r\n    {\r\n      id: 2,\r\n      title: \"Meditation\",\r\n      price: 10,\r\n      img: meditation ,        \r\n      amount: 1\r\n    },\r\n    {\r\n      id: 3,\r\n      title: \"Crossfit\",\r\n      price: 15,\r\n      img: crossfit,\r\n       amount: 1\r\n    },  \r\n    {\r\n      id: 5,\r\n      title: \"Rowing\",\r\n      price: 25,\r\n      img: boat,\r\n       amount: 1\r\n    },  \r\n    {\r\n      id: 6,\r\n      title: \"Trekking\",\r\n      price: 20,\r\n      img: trekking,\r\n       amount: 1\r\n    }\r\n  ];\r\n\r\n  export default data;\r\n  ","export default __webpack_public_path__ + \"static/media/yoga.1b73c670.png\";","export default __webpack_public_path__ + \"static/media/meditation.f1674974.png\";","export default __webpack_public_path__ + \"static/media/boat.0fe697bc.png\";","export default __webpack_public_path__ + \"static/media/trekking.2886b6a8.png\";","import { DECREASE, GET_TOTALS, INCREASE, REMOVE, SHOW_ALL } from './actions';\r\n// items\r\nimport data from \"./data\";\r\n\r\n//initial store\r\n//cart = cartitems from data file data.js\r\n//total=initial amout of money to pay in cart\r\n//amount= initial amount of items in cart\r\nlet cartItems = data;\r\n\r\nconst initialStore = {\r\n    cart: cartItems,\r\n    total: 0,\r\n    amount: 0\r\n};\r\n\r\n//reducer\r\nfunction reducer(state = initialStore, action) { \r\n    //can't mutate state\r\n    //NO state.count = state.count -1\r\n    //instead copy and return a new object\r\n    //...state: COPY all values from state\r\n    //change in that copy only count value\r\n\r\n    if (action.type === SHOW_ALL) {\r\n        \r\n        return { ...state, cart: data };      \r\n    }\r\n\r\n    if (action.type === DECREASE) {\r\n        let newCart = [];\r\n        if (action.payload.amount === 1) {\r\n            newCart = state.cart.filter(cartItem => cartItem.id !== action.payload.id);\r\n        }\r\n        else {\r\n            newCart = state.cart.map(cartItem => {\r\n                if (cartItem.id === action.payload.id) {\r\n                    cartItem = { ...cartItem, amount: cartItem.amount - 1 };\r\n                }\r\n                return cartItem;\r\n            })\r\n        }\r\n        return { ...state, cart: newCart };\r\n    }\r\n\r\n    if (action.type === INCREASE) {\r\n        let newCart = state.cart.map(cartItem => {\r\n            if (cartItem.id === action.payload.id) {\r\n                cartItem = { ...cartItem, amount: cartItem.amount + 1 };\r\n            }\r\n            return cartItem;\r\n        })\r\n        return { ...state, cart: newCart };\r\n    }\r\n\r\n    if (action.type === REMOVE) {\r\n        let newCart = state.cart.filter(cartItem => cartItem.id !== action.payload.id);\r\n        return { ...state, cart: newCart };\r\n    }\r\n\r\n    //amount= number in the cart icon in navbar\r\n    //total = number in total after all cart items\r\n    if (action.type === GET_TOTALS) {\r\n        let { total, amount } = state.cart.reduce((cartTotal, cartItem) => {\r\n            //reduce ES6 we can return anything we want but must return total\r\n            const { price, amount } = cartItem;\r\n            const itemTotal = price * amount;\r\n\r\n            cartTotal.total += itemTotal;\r\n            cartTotal.amount += amount;\r\n            return cartTotal;\r\n        },\r\n            {\r\n                total: 0,\r\n                amount: 0\r\n            }\r\n        );\r\n        return { ...state, total, amount };\r\n    }\r\n    return state;\r\n}\r\n\r\nexport default reducer;","import React from \"react\";\n// components\nimport Navbar from \"./components/Navbar\";\nimport CartContainer from \"./components/CartContainer\";\n// redux\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport reducer from './reducer';\n\nconst store = createStore (reducer);\n\nfunction App() {\n  // cart setup\n\n  //{store} the store name should match with the store variable storing createStore\n  return (\n    <Provider store={store}>\n      <Navbar/>\n      <CartContainer />\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}